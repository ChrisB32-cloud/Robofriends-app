{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/Robofriends-app/src/container/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nconst App = () => {\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchField] = useState('');\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setRobots(users));\n  }, []);\n\n  const onSearchChange = event => {\n    setSearchField(event.target.value);\n  };\n\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n  return !robots.length ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Loading\") : React.createElement(\"div\", {\n    className: \"tc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"f1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"RoboFriends\"), count, React.createElement(\"button\", {\n    onClick: () => setCount + 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Click me!\"), React.createElement(SearchBox, {\n    searchChange: onSearchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Scroll, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ErrorBoundry, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(CardList, {\n    robots: filteredRobots,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })))); // }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/Robofriends-app/src/container/App.js"],"names":["React","useState","useEffect","CardList","SearchBox","Scroll","ErrorBoundry","App","robots","setRobots","searchfield","setSearchField","count","setCount","fetch","then","response","json","users","onSearchChange","event","target","value","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAEd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,KAAK,IAAIT,SAAS,CAACS,KAAD,CAF5B;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9BT,IAAAA,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAEH,GAHD;;AAKA,QAAMC,cAAc,GAAGf,MAAM,CAACgB,MAAP,CAAcC,KAAK,IAAI;AAC1C,WAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkClB,WAAW,CAACiB,WAAZ,EAAlC,CAAP;AACH,GAFsB,CAAvB;AAKA,SAAO,CAACnB,MAAM,CAACqB,MAAR,GACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADG,GAIC;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEKjB,KAFL,EAGI;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,GAAG,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEM,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEI,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CALJ,CAJR,CAtBc,CAyCd;AACH,CA1CD;;AA4CA,eAAehB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\n\nconst App = () => {\n\n    const [robots, setRobots] = useState([])\n    const [searchfield, setSearchField] = useState('')\n    const [count, setCount] = useState(0)\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => setRobots(users))\n    }, [])\n\n    const onSearchChange = (event) => {\n        setSearchField(event.target.value)\n\n    }\n\n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n\n\n    return !robots.length ?\n        <h1>Loading</h1> :\n        (\n\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                {count}\n                <button onClick={() => setCount + 1} >Click me!</button>\n                <SearchBox searchChange={onSearchChange} />\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n\n\n\n    // }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}