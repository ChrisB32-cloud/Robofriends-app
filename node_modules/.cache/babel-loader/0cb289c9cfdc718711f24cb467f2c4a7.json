{"ast":null,"code":"var _jsxFileName = \"/Users/chrisbrown/Desktop/Robofriends-app/src/container/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport { setSearchField } from '../actions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchField\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nconst App = ({\n  searchField,\n  onSearchChange\n}) => {\n  _s();\n\n  const [robots, setRobots] = useState([]); // const [searchField, setSearchField] = useState('')\n\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    // console.log(store.getState());\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setRobots(users));\n  }, []); // const onSearchChange = (event) => {\n  //     setSearchField(event.target.value)\n  // }\n\n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n  return !robots.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"f1\",\n      children: \"RoboFriends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      searchChange: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n        children: /*#__PURE__*/_jsxDEV(CardList, {\n          robots: filteredRobots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this); // }\n};\n\n_s(App, \"2gt07R/LK/BUNE4dKGXUPnsSzbc=\");\n\n_c = App;\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chrisbrown/Desktop/Robofriends-app/src/container/App.js"],"names":["React","useState","useEffect","connect","CardList","SearchBox","Scroll","ErrorBoundry","setSearchField","mapStateToProps","state","searchField","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","robots","setRobots","count","setCount","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAO,WAAP;;;AAGA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADhB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACL,cAAc,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AADhC,GAAP;AAGH,CAJD;;AAOA,MAAMC,GAAG,GAAG,CAAC;AAAEP,EAAAA,WAAF;AAAeG,EAAAA;AAAf,CAAD,KAAqC;AAAA;;AAE7C,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC,CAF6C,CAG7C;;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,CAAD,CAAlC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAqB,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,KAAK,IAAIP,SAAS,CAACO,KAAD,CAF5B;AAGH,GALQ,EAKN,EALM,CAAT,CAR6C,CAe7C;AACA;AAEA;;AAEA,QAAMC,cAAc,GAAGT,MAAM,CAACU,MAAP,CAAcC,KAAK,IAAI;AAC1C,WAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCtB,WAAW,CAACqB,WAAZ,EAAlC,CAAP;AACH,GAFsB,CAAvB;AAMA,SAAO,CAACb,MAAM,CAACe,MAAR,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,gBAIC;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,SAAD;AAAW,MAAA,YAAY,EAAEpB;AAAzB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,MAAD;AAAA,6BACI,QAAC,YAAD;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,MAAM,EAAEc;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAJR,CA1B6C,CA6C7C;AACH,CA9CD;;GAAMV,G;;KAAAA,G;AAgDN,eAAef,OAAO,CAACM,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport { setSearchField } from '../actions'\nimport './App.css';\n\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchField\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n    }\n}\n\n\nconst App = ({ searchField, onSearchChange }) => {\n\n    const [robots, setRobots] = useState([])\n    // const [searchField, setSearchField] = useState('')\n    const [count, setCount] = useState(0)\n\n\n\n    useEffect(() => {\n        // console.log(store.getState());\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => setRobots(users))\n    }, [])\n\n    // const onSearchChange = (event) => {\n    //     setSearchField(event.target.value)\n\n    // }\n\n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n\n\n\n    return !robots.length ?\n        <h1>Loading</h1> :\n        (\n\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                {/* {count} */}\n                {/* <button onClick={() => setCount(count + 1)} >Click me!</button> */}\n                <SearchBox searchChange={onSearchChange} />\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n\n\n\n    // }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}